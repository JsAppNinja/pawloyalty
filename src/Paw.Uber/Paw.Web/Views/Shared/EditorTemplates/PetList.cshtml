@model List<Guid>
@using Paw.Services.Messages.Web.Searches
@{
    string propertyName = this.ViewData.ModelMetadata.PropertyName;
    Guid? providerGroupId = (Guid?)this.ViewData["__ProviderGroupId"];
    Guid? providerId = (Guid?)this.ViewData["__ProviderId"];

    Layout = "InputContainer.cshtml";
}

@(Html.Kendo().AutoComplete()
                .Name(propertyName)
                .AutoWidth(true)
                .DataTextField("Pet")
                .Template(string.Format("<strong>#: data.Pet #</strong> #: data.Owner #", providerId))
                .MinLength(3)
                .HtmlAttributes(new { @class = "input-lg mr-sm-2", placeholder = "Search...", style = "width: 100%" })
                .Events(client => client.Select("on" + propertyName + "Select"))
                .DataSource(source =>
                {
                    source.Custom()
                        .ServerFiltering(true)
                        .Type("aspnetmvc-ajax") //Set this type if you want to use DataSourceRequest and ToDataSourceResult instances.
                        .Transport(transport =>
                        {
                            transport.Read(config => config.Url(string.Format("/ProviderGroups/{0}/Search/PetOwner", providerGroupId)));
                        })
                        .Schema(schema =>
                        {
                            schema
                            .Data("Data")
                            .Model(model =>
                            {
                                model.Id("Id");
                                model.Field("Pet", typeof(string));
                                model.Field("OwnerId", typeof(Guid));
                                model.Field("Owner", typeof(string));
                                model.Field("Breed", typeof(string));
                                model.Field("PetAndOwner", typeof(string));
                                model.Field("ProviderId", typeof(Guid));
                            });
                        });
                })
                .Deferred()
)
<div id="@(propertyName)-selected-pet-container" style="padding-top:5px;">

    @for (int i = 0; i < this.Model.Count; i++)
    {
        PetOwnerLink petOwnerLink = new GetPetOwnerLink() { Id = this.Model[i], ProviderGroupId = providerGroupId.Value }.ExecuteItem();

        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <strong>@petOwnerLink.Pet </strong> @petOwnerLink.Fullname
            <input type="hidden" class="search-item" id="@(propertyName)_@i" name="@(propertyName)[@i]" value="{{Id}}" />
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

</div>

<script id="@(propertyName)-selected-pet-template" type="text/x-handlebars-template">
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong>{{Pet}}</strong> {{Owner}}
        <input type="hidden" class="search-item" id="@(propertyName)_{{Id}}" name="@(propertyName)_n" value="{{Id}}" />
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
</script>


<script>

    function on@(propertyName)Select(e) {
        var itemId = $(this.element).attr('id');
        var source = document.getElementById(itemId + '-selected-pet-template').innerHTML;
        var template = Handlebars.compile(source);
        var html = template(e.dataItem);
        $('#' + itemId + '-selected-pet-container').append(html);
        $('#' + itemId).data("kendoAutoComplete").value("");
        e.preventDefault();

        $(".search-item").each(function (index) {
            $(this).attr('name', '@(propertyName)[' + index + ']');
            $(this).attr('id', '@(propertyName)_' + index);
        });

        $.event.trigger({
            type: "addPet",
            dataItem: e.dataItem,
            time: new Date()
        });
        
    }




</script>

